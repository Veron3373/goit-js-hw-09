{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAKA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAkBN,SAAhBC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EAEFI,EAAQ,C,SAAEN,E,MAAUC,IAGpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA1BbN,EAAKC,KAAKa,iBAAiB,UAGlB,SAAaC,GACpBA,EAAEC,iBA2BuB,UAAJV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,IAClC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BC,QAAQC,IAAIF,EAAI,EAAGH,EAAQC,EAAOE,GAClChB,EAAcgB,EAAI,EAAGH,EAAQC,EAAOE,GACjCG,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBR,EAAA0B,OAAOC,QAAQ,sBAACpB,OAAmBc,OAA2Bb,WAAa,IAE5EoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBR,EAAA0B,OAAOG,QAAQ,uBAACtB,OAAAc,OAAgDb,UAAa,G,CAlCnFsB,CAIc,UAAQtB,MAAEA,EAAKY,KAAEA,EAAIC,OAAEA,IACrC,MAAO,CAAEb,MAAOuB,OAAOvB,EAAMwB,OAAQZ,KAAMW,OAAOX,EAAKY,OAAQX,OAAQU,OAAOV,EAAOW,O,CALzEC,CAAe/B,EAAKC,KAAK+B,U","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\n//* DOM\nconst refs = {\n  form: document.querySelector('form'),\n};\n\n//* submit\nrefs.form.addEventListener('submit', onFormSubmit);\n\n//* function елементів\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  processTask(getInputValues(refs.form.elements));\n}\n\n//* Деструктуризація\nfunction getInputValues({ delay, step, amount }) {\n  return { delay: Number(delay.value), step: Number(step.value), amount: Number(amount.value) };\n}\n\n//* Виклик n разів скільки в amount (random + виклик resolve reject)\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n//* Формування кількості викликів\nfunction processTask({ delay, step, amount }) {\n  for (let i = 0; i < amount; i += 1) {\n    console.log(i + 1, delay + step * i);\n    createPromise(i + 1, delay + step * i)\n      .then(({ position, delay }) => {\n        Notify.success(`Виконана обіцянка (${position} з ${amount} в ${delay} ms)  ✅`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Скасована обіцянка (${position} з ${amount} в ${delay} ms) ❌`);\n      });\n  }\n}\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","step","amount","i","console","log","then","Notify","success","catch","failure","$47d4ff9957288465$var$processTask","Number","value","$47d4ff9957288465$var$getInputValues","elements"],"version":3,"file":"03-promises.2e08ed65.js.map"}