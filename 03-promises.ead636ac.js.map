{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAKA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAI/BH,EAAKC,KAAKG,iBAAiB,UAGlB,SAAaC,GACpBA,EAAEC,iBA8BuB,UAAJC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,IAClC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAE/BC,EAAcD,EAAI,EAAGH,EAAQC,EAAOE,GACjCE,MAAK,EAACC,SAAEA,EAAQP,MAAEA,MACjBQ,GAAkB,EAClBjB,EAAAkB,OAAOC,QAAQ,kBAACH,OAA+BJ,oCAAsBK,WAA4DR,UAAA,IAElIW,OAAM,EAACJ,SAAEA,EAAQP,MAAEA,MAClBY,GAAiB,EACjBrB,EAAAkB,OAAOI,QAAQ,kBAACN,OAA+BJ,qCAAsBS,WAA8DZ,UAAA,G,CAvCzIc,CAIc,UAAQd,MAAEA,EAAKE,KAAEA,EAAIC,OAAEA,IACrC,MAAO,CAAEH,MAAOe,OAAOf,EAAMgB,OAAQd,KAAMa,OAAOb,EAAKc,OAAQb,OAAQY,OAAOZ,EAAOa,O,CALzEC,CAAexB,EAAKC,KAAKwB,U,IAQvC,IAAIV,EAAiB,EACjBI,EAAgB,EAGK,SAAhBP,EAAcE,EAAUP,GAC/B,MAAMmB,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EAEFI,EAAQ,C,SAAEhB,E,MAAUP,IAGpBwB,EAAO,C,SAAEjB,E,MAAUP,GAAQ,GAE5BA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\n//* DOM\nconst refs = {\n  form: document.querySelector('form'),\n};\n\n//* submit\nrefs.form.addEventListener('submit', onFormSubmit);\n\n//* function елементів\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  processTask(getInputValues(refs.form.elements));\n}\n\n//* Деструктуризація\nfunction getInputValues({ delay, step, amount }) {\n  return { delay: Number(delay.value), step: Number(step.value), amount: Number(amount.value) };\n}\n\nlet resolvePromise = 0\nlet rejectPromise = 0\n\n//* Виклик n разів скільки в amount (random + виклик resolve reject)\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}     \n\n//* Формування кількості викликів\nfunction processTask({ delay, step, amount }) {\n  for (let i = 0; i < amount; i += 1) {\n    // console.log(i + 1, delay + step * i);\n    createPromise(i + 1, delay + step * i)\n      .then(({ position, delay }) => {\n        resolvePromise += 1\n        Notify.success(`Повідомлення № ${position} з ${amount}. Виконано обіцянку в кількості ${resolvePromise} шт за ${delay} ms. ✅`)\n      })\n      .catch(({ position, delay }) => {\n        rejectPromise += 1\n        Notify.failure(`Повідомлення № ${position} з ${amount}. Скасовано обіцянку в кількості ${rejectPromise} шт за ${delay} ms. ❌`)\n      })   \n     \n  }\n\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","addEventListener","e","preventDefault","delay","delay1","step","amount","i","$47d4ff9957288465$var$createPromise","then","position","$47d4ff9957288465$var$resolvePromise","Notify","success","catch","$47d4ff9957288465$var$rejectPromise","failure","$47d4ff9957288465$var$processTask","Number","value","$47d4ff9957288465$var$getInputValues","elements","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.ead636ac.js.map"}